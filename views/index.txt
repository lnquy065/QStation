<html>
<head>
    <title>QStation</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
        crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <style>
        body {
            height: 100vh;
            width: 100vw;
            display: flex;
        }

        #div-slidemenu {
            background-color: rgb(41, 41, 41);
            min-width: 250px;
            height: 100%;
            width: 250px;
            border-right: 2px solid green;
        }

        #div-content {
            flex: 1;
        }

        .node-item {
            background-color: rgb(71, 71, 71);
            padding: 5px 10px;
            color: white;
            border-bottom: 1px solid rgb(156, 156, 156);
            transition: 0.5s;
        }

        .node-item:hover {
            background-color: rgb(185, 185, 185);
            color: black;
        }




        .node-name {
            margin-right: 5px;
        }

        .node-pos {
            font-size: 15px;
        }

        .node-name,
        .node-id {
            font-size: 18px;
        }

        .card-body img {
            margin: 5px;
        }

        .card-header {
            padding: 4px 0px 0px 5px;
        }

        .card-header img {
            margin-right: 5px;
            width: 25px;
        }

        .card {
            margin: 5px;
        }
    </style>

</head>

<body>
    <!-- SLIDE MENU -->
    <div id="div-slidemenu">
        <div id="div-logo" style="background-color: rgb(255, 255, 255); border-bottom: 2px solid #01991C">
            <img src="res/img/qstation.png" width="250px" style="margin: 5px">
        </div>
        <div id="div-loading">
            <img src="res/img/loading.gif" alt="" width="75px" style="margin: 100% auto; display: block">
        </div>
        <div id="div-nodeListContainer">

        </div>
        <div id="div-footer" style="text-align: center; position: absolute; bottom: 5px; left: 10px;">
            <i style="color: white">Copyright © 2018 by Ln Quy</i>
        </div>
    </div>
    <!-- CHART -->
    <div id="div-content">
        <div class="card-group">

        
            <!-- THONG TIN -->
            <div class="card">
                <div class="card-header">
                    <h4><img src="res/img/info.png">Thông tin trạm</h4>
                </div>
                <div class="card-body">
                <h5 style="margin-bottom: 5px">Tên trạm: <b id="cnode-name"></b></h5>
                <span style="margin-bottom: 10px;display: block">Dữ liệu thời gian thực: CO2 (<b id="rnode-co2"></b> ppm) - Bụi (<b id="rnode-dust"></b> µg/m3) - UV (<b id="rnode-uv"></b>  mW/cm2)
            </span>
                <img src="res/img/qnode.png" width="15px">Chi tiết trạm: <b id="cnode-id"></b><a id="cnode-pos"></a>
                <br><img src="res/img/co2on.png" width="15px">Nồng độ CO2 cao nhất: <b id="cnode-co2"></b>
                <br><img src="res/img/humon.png" width="15px">Nồng độ bụi cao nhất: <b id="cnode-dust"></b>
                <br><img src="res/img/uvon.png" width="15px">Chỉ số UV cao nhất: <b id="cnode-uv"></b>
                        
                    
                    <div class="input-group" style="width: 400px;margin-top: 15px">
                        <div class="input-group-prepend">
                            <span class="input-group-text">Ngày</span>
                        </div>
                        <input class="form-control" id="cdate" type="date">
                        <div class="btn-group">
                                <button class="btn btn-primary" onclick="dateChange()">Đổi</button>
                            <button class="btn btn-primary" onclick="datePrev()"><</button>
                                    <button class="btn btn-primary" onclick="dateToday()">o</button>
                                    <button class="btn btn-primary" onclick="dateNext()">></button>
                        </div>

                    </div>
                </div>
            </div>
            <!-- BAN DO -->
            
            <div class="card" style="display: block">
                <div class="card-header">
                    <h4><img src="res/img/map.png">Bản đồ</h4>
                </div>
                <div class="card-body" style="padding: 2px">
                        <div id="map" style="width: 100%; height: 250px;"></div>
                </div>
            </div>
        </div>
       
            <!-- BIEU DO -->
            <div class="card">
                <div class="card-header">
                    <h4><img src="res/img/chart.png">Biểu đồ</h4>
                </div>
                <div class="card-body">
                    <div id="chartContainer" style="height: 350px;width: 100%"></div>
                </div>
            </div>
        
    </div>

   
    <script>
      var map;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -34.397, lng: 150.644},
          zoom: 8
        });
      }
    </script>
    <script     src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDxyHBFqWHTd4Uzs9p4TvmgmSEuInNDk5Q&callback=initMap"
    async defer></script>

    <script>
        var map;
        var chart;
        var marker;
        $.ajax({
            url: 'node',
            type: 'GET',
            success: ret => {
                let nodeListContainer = $('#div-nodeListContainer');
                $('#div-loading').fadeOut(300);
                setTimeout( () => {
                    ret.forEach(e => {
                        nodeListContainer.append('<div id="node-' + e.id + '" class="node-item active" onclick="chooseNodeItem(\'' + e.id + '\')" ><b class="node-name">' + e.name + '</b>(<b class="node-id">' + e.id + '</b>)<br><i class="node-pos">(' + e.lat + ',' + e.lng + ')</i></div>');
                    });
                }, 300);
               
                
            }
        })

        function dateChange() {
            let nodeId =  $('#cnode-id').text();
            refeshChart(nodeId);
        }

        function datePrev() {
            let date = new Date ( $('#cdate').val() );
            date.setDate( date.getDate() - 1);
            $('#cdate').val(date.toDateInputValue());
            let nodeId =  $('#cnode-id').text();
            refeshChart(nodeId);
        }

        function dateNext() {
            let date = new Date ( $('#cdate').val() );
            date.setDate( date.getDate() + 1);
            $('#cdate').val(date.toDateInputValue());
            let nodeId =  $('#cnode-id').text();
            refeshChart(nodeId);
        }

        function dateToday() {
            $('#cdate').val(new Date().toDateInputValue());
            let nodeId =  $('#cnode-id').text();
            refeshChart(nodeId);
        }

        function refeshChart(nodeId) {
                        //find data points
                        console.log(chart);
            let chartDatas = chart.data;
            let co2Data = chartDatas[0].dataPoints;
            let dustData = chartDatas[1].dataPoints;
            let uvData = chartDatas[2].dataPoints;
            //clear
                co2Data.length = 0;
                dustData.length = 0;
                uvData.length = 0;
            //
            let cDate = new Date( $('#cdate').val() );
            cDate.setHours(0);
            console.log(cDate);
            let maxHours = 24;
            for (let i=0; i<maxHours; i++) {
                let newDate = new Date(cDate);
                newDate.setHours( newDate.getHours() + i);
                co2Data.push( {
                    x: newDate,
                    y: 0
                })
                dustData.push( {
                    x: newDate,
                    y: 0
                })
                uvData.push( {
                    x: newDate,
                    y: 0
                })
            }
            //load from server
            console.log('node/chart/'+nodeId+'/'+cDate);
            $.ajax({
                url: 'node/chart/'+nodeId+'/'+cDate.toYMD(),
                type: 'GET',
                success: (msg) => {
                    let maxCo2 = 0, maxUv = 0, maxDust = 0;
                    msg.forEach( s => {
                        
                        let date = new Date( s.timeStamp );
                        let oCo2 = co2Data[ date.getHours() ].y;
                        let oUv = uvData[ date.getHours() ].y;
                        let oDust = dustData[ date.getHours() ].y;
                        console.log(oCo2, s.vCo2);
                        if (oCo2 < s.vCo2) {
                            co2Data[ date.getHours() ].y = s.vCo2 > 10000? 0:s.vCo2;
                            if (maxCo2 < s.vCo2) maxCo2 = s.vCo2;
                        }

                        if (oDust < s.vDust) {
                            dustData[ date.getHours() ].y = s.vDust;
                            if (maxDust < s.vDust) maxDust = s.vDust;
                        }

                        if (oUv < s.vUv)  {
                            uvData[ date.getHours() ].y = s.vUv;
                            if (maxUv < s.vUv) maxUv = s.vUv;
                        }
                    })
                    $('#cnode-co2').text(maxCo2 + ' ppm');
                    $('#cnode-dust').text(maxDust + ' µg/m3');
                    $('#cnode-uv').text(maxUv + ' mW/cm2');
                    chart.render();
                }
            })

           
        }

        function chooseNodeItem(nodeId) {
            //set info
            
            let nodeItem = $('#node-'+nodeId);
            $('#cnode-name').text( nodeItem.children('.node-name').text() );
            $('#cnode-id').text(nodeId);
            $('#cnode-pos').text( nodeItem.children('.node-pos').text() );
            let pos = nodeItem.children('.node-pos').text();
            pos = pos.substring(1);
            pos = pos.slice(0, -1);
            pos = pos.split(',');
            refeshChart(nodeId);
            if (marker) marker.setMap(null);
            marker = new google.maps.Marker({position: {lat: parseFloat(pos[0]) , lng: parseFloat(pos[1])}, map: map});
            map.setCenter({lat: parseFloat(pos[0]), lng: parseFloat(pos[1])}); 
            map.setZoom(17);
            //setup firebase
            firebase.database().ref('/nodeData').child(nodeId).on('child_added',  (snap) => {
                let val = snap.val();
                $('#rnode-co2').text( val.vCo2 );
                $('#rnode-dust').text(val.vDust);
                $('#rnode-uv').text(val.vUv);
            });
        }

        window.onload = function () {
            $('#cdate').val( new Date().toDateInputValue() );
            chart = new CanvasJS.Chart("chartContainer", {
                title: {
                    text: ""
                },
                axisY: [{
                    title: "CO2 (ppm)",
                    lineColor: "#C24642",
                    tickColor: "#C24642",
                    labelFontColor: "#C24642",
                    titleFontColor: "#C24642",
                    },
                    {
                    title: "Bụi (µg/m3)",
                    lineColor: "#369EAD",
                    tickColor: "#369EAD",
                    labelFontColor: "#369EAD",
                    titleFontColor: "#369EAD"
                    }],
                axisY2: {
                    title: "UV (mW/cm2)",
                    lineColor: "#7F6084",
                    tickColor: "#7F6084",
                    labelFontColor: "#7F6084",
                    titleFontColor: "#7F6084"
                },
                toolTip: {
                    shared: true
                },
                legend: {
                    cursor: "pointer",
                    itemclick: toggleDataSeries
                },
                data: [{
                    type: "line",
                    name: "CO2",
                    color: "#369EAD",
                    showInLegend: true,
                    axisYIndex: 1,
                    dataPoints: []
                },
                {
                    type: "line",
                    name: "Bụi",
                    color: "#C24642",
                    axisYIndex: 0,
                    showInLegend: true,
                    dataPoints: [ ]
                },
                {
                    type: "line",
                    name: "UV",
                    color: "#7F6084",
                    axisYType: "secondary",
                    showInLegend: true,
                    dataPoints: [ ]
                }]
            });
            chart.render();

            function toggleDataSeries(e) {
                if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                    e.dataSeries.visible = false;
                } else {
                    e.dataSeries.visible = true;
                }
                e.chart.render();
            }

        }
        Date.prototype.toDateInputValue = (function() {
            var local = new Date(this);
            local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
            return local.toJSON().slice(0,10);
        });

        Date.prototype.toYMD = (function() {
            var local = new Date(this);
            let y = local.getFullYear();
            let m = local.getMonth()+1;
            let d = local.getDate();
            return local.getFullYear() + '-' + (m<10? '0':'') + m + '-' + (d<10? '0':'') + d;
        });

    </script>
    <script src="https://www.gstatic.com/firebasejs/5.3.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/5.3.0/firebase-auth.js"></script>
<script src="https://www.gstatic.com/firebasejs/5.3.0/firebase-database.js"></script>
    
    <script>
      // Initialize Firebase
      // TODO: Replace with your project's customized code snippet
      var config = {
        apiKey: "AIzaSyDxyHBFqWHTd4Uzs9p4TvmgmSEuInNDk5Q",
        authDomain: "qstation-5bd62.firebaseapp.com",
        databaseURL: "https://qstation-5bd62.firebaseio.com",
        projectId: "qstation-5bd62"
      };

      firebase.initializeApp(config);
    </script>
</body>



</html>